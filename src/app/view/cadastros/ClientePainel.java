package app.view.cadastros;

import app.dto.*;
import app.interfaces.*;
/**
 *
 * @author Dave
 */
public class ClientePainel extends InterfacePainel {

    private ClienteDTO dto;

    /**
     * Creates new form ClientePainel
     */
    public ClientePainel(InterfaceDTO dto) {
        dto = new ClienteDTO(); // Inicializa o DTO no construtor para garantir que não seja nulo (evita NullPointerException)
        initComponents();
        setDTO(dto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(390, 202));

        jLabel1.setText("Nome");
        jLabel1.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public InterfaceDTO getDados() { // metodo getDados é chamado para salvar os dados
        ClienteDTO clienteDTO = dto; // Usa a mesma instância do DTO atual que está sendo usado no painel
        clienteDTO.nome = jtfNome.getText(); // Pega o texto do jtfNome e Coloca no nome do dto atual.
        
        return clienteDTO; //Retorna o dto atualizado para que o Controller use
    }

    @Override
    public void setDTO(InterfaceDTO dto) { //setDTO é chamado para preencher o painel com dados já existentes
        this.dto = (ClienteDTO) dto; // Cast - Converte o InterfaceDTO para ClienteDTO
        jtfNome.setText(this.dto.nome); // Coloca o valor do nome no campo de texto.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jtfNome;
    // End of variables declaration//GEN-END:variables
}
