package app.view.cadastros;

import app.dto.*;
import app.interfaces.*;
import java.util.LinkedList;
/**
 *
 * @author Dave
 */
public class FuncionarioPainel extends InterfacePainel {

    private FuncionarioDTO dto;

    /**
     * Creates new form FuncionarioPainel Construtor do Painel de Funcionário
     * Inicializa o DTO e os componentes visua
     */
    public FuncionarioPainel(InterfaceDTO dto) {
        dto = new FuncionarioDTO(); // Cria o DTO para não ser nulo
        initComponents(); // Cria os componentes da tela
        setDTO(dto); // Preenche a tela com o DTO (inicialmente vazio)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNome = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jLabelCPF = new javax.swing.JLabel();
        jLabelRG = new javax.swing.JLabel();
        jLabelTelefone = new javax.swing.JLabel();
        jtfTelefone = new javax.swing.JTextField();
        jtfCPF = new javax.swing.JTextField();
        jtfRG = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(390, 202));

        jLabelNome.setText("Nome");
        jLabelNome.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabelNome.setMinimumSize(new java.awt.Dimension(0, 0));

        jLabelCPF.setText("CPF");
        jLabelCPF.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabelCPF.setMinimumSize(new java.awt.Dimension(0, 0));

        jLabelRG.setText("RG");
        jLabelRG.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabelRG.setMinimumSize(new java.awt.Dimension(0, 0));

        jLabelTelefone.setText("Telefone");
        jLabelTelefone.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabelTelefone.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRG, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfTelefone, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                    .addComponent(jtfRG)
                    .addComponent(jtfCPF)
                    .addComponent(jtfNome))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método chamado para pegar os dados da tela e preencher o DTO. Chamado
     * quando o Controller quer salvar os dados.
     */
    @Override
    public InterfaceDTO getDados() {
        FuncionarioDTO funcionarioDTO = dto; // Usa o DTO atual
        funcionarioDTO.nome = jtfNome.getText(); // Pega texto do campo Nome
        funcionarioDTO.cpf = jtfCPF.getText(); // Pega texto do campo CPF
        funcionarioDTO.rg = jtfRG.getText(); // Pega texto do campo RG

        // Pega telefone e coloca na lista
        funcionarioDTO.telefones = new LinkedList<>();
        funcionarioDTO.telefones.add(jtfTelefone.getText());

        return funcionarioDTO; // Retorna DTO preenchido
    }

    /**
     * Método chamado para preencher a tela com dados do DTO. Chamado quando o
     * Controller quer exibir um registro existente.
     */
    @Override
    public void setDTO(InterfaceDTO dto) {
        this.dto = (FuncionarioDTO) dto; // Faz cast para FuncionarioDTO

        jtfNome.setText(this.dto.nome); // Coloca nome na tela
        jtfCPF.setText(this.dto.cpf); // Coloca CPF na tela
        jtfRG.setText(this.dto.rg); // Coloca RG na tela

        // Se tiver telefone, exibe o primeiro
        if (this.dto.telefones != null && !this.dto.telefones.isEmpty()) {
            jtfTelefone.setText(this.dto.telefones.get(0));
        } else {
            jtfTelefone.setText(""); // Senão, campo vazio
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelRG;
    private javax.swing.JLabel jLabelTelefone;
    private javax.swing.JTextField jtfCPF;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfRG;
    private javax.swing.JTextField jtfTelefone;
    // End of variables declaration//GEN-END:variables
}
